C51 COMPILER V9.02   MAIN                                                                  05/21/2018 21:49:56 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: F:\KEIL4\C51\BIN\C51.EXE ..\source\main.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*******************************************************************************
   2          * 文件名：第八届国赛之超声波测距机
   3          * 描  述：
   4          * 作  者：CLAY
   5          * 版本号：v1.0.0
   6          * 日  期: 2018年5月20日 2018年5月21日
   7          * 备  注：*题目有点不全，'存完一个距离以0.2s为间隔闪烁'，并没有说持续多久，这里我按1s进行了处理
   8          *         
   9          *******************************************************************************
  10          */
  11          
  12          #include "config.h"
  13          #include "keyboard.h"
  14          #include "led.h"
  15          #include "time.h"
  16          #include "ds18b20.h"
  17          #include "ds1302.h"
  18          #include "eeprom.h"
  19          #include "pcf8591.h"
  20          #include "main.h"
  21          
  22          enum eSysSta SysSta = E_RUN;//默认系统运行状态
  23          
  24          u8 T0RH, T0RL;
  25          bit flag200ms = 0;
  26          bit OpenLed1 = 0;
  27          bit flagLed1 = 0;
  28          u8 tmrLed1 = 0;//控制间隔0.2s计数器
  29          u8 Led1Cnt = 0;//控制持续1s计数器
  30          u16 OprtNum = 1;//距离测量界面的操作数设置
  31          u16 distance=10, LastDistance=0, FixDistance=0;//距离测量界面的本次距离、上次距离
  32          
  33          void CloseFucker();
  34          void ConfigTimer0(u16 ms);
  35          void InitSonic();
  36          void SonicDriver();
  37          void ResetE2();
  38          void TurnLed1();
  39          void Timer2Init();
  40          
  41          void main()
  42          {
  43   1              u8 dat = 11, dat1 = 0;
  44   1              u8 val = 0;
  45   1              
  46   1              EA = 1;
  47   1              CloseFucker();
  48   1              ConfigTimer0(1);
  49   1              InitSonic();
  50   1              ResetE2();//初始化0x00~0x09的内容为0
  51   1                      
  52   1              while(1)
  53   1              {
  54   2                      KeyDriver();
C51 COMPILER V9.02   MAIN                                                                  05/21/2018 21:49:56 PAGE 2   

  55   2                      
  56   2                      if(flag200ms)
  57   2                      {
  58   3                              flag200ms = 0;
  59   3                              if(SysSta == E_RUN)
  60   3                              {
  61   4                                      SonicDriver();
  62   4                              }
  63   3                              
  64   3                              if(distance < FixDistance)
  65   3                              {
  66   4                                      SetDACOut(0);
  67   4                              }
  68   3                              else
  69   3                              {
  70   4                                      val = (u8)((distance-FixDistance)*0.2);
  71   4                                      SetDACOut(val);
  72   4                              }
  73   3                      }       
  74   2                      if(flagLed1)
  75   2                      {
  76   3                              flagLed1 = 0;
  77   3                              TurnLed1();
  78   3                      }
  79   2              }
  80   1      }
  81          
  82          void TurnLed1()
  83          {
  84   1              static bit Led1Sta = 0;//控制LED反转状态的静态变量
  85   1              
  86   1              if(Led1Sta == 0)//当前灯是灭
  87   1              {
  88   2                      Led1Sta = 1;//更新状态位
  89   2                      P2 = (P2&0x1F) | 0x80;//打开LED1        
  90   2                      P0 = 0xFE;
  91   2                      P2 = P2&0x1F;
  92   2              }
  93   1              else//当前灯是亮
  94   1              {
  95   2                      Led1Sta = 0;//更新状态位
  96   2                      P2 = (P2&0x1F) | 0x80;//关闭LED1
  97   2                      P0 = 0xFF;
  98   2                      P2 = P2&0x1F;
  99   2              }
 100   1              
 101   1              Led1Cnt++;//1s间隔计数器
 102   1              if(Led1Cnt >= 6)//注意了这样才是1s
 103   1              {
 104   2                      Led1Cnt = 0;//清除控制间隔时间的计数变量，以便下次再计数
 105   2                      OpenLed1 = 0;//关闭LED1开关
 106   2                      tmrLed1 = 0;//清除0.2ms的定时器计数
 107   2                      
 108   2                      P2 = (P2&0x1F) | 0x80;//确保关闭LED1
 109   2                      P0 = 0xFF;
 110   2                      P2 = P2&0x1F;
 111   2              }
 112   1              
 113   1      }
 114          
 115          void ResetE2()//初始化E2中的数据从0x00~0x09
 116          {
C51 COMPILER V9.02   MAIN                                                                  05/21/2018 21:49:56 PAGE 3   

 117   1              u8 i, dat=0;
 118   1              
 119   1              for(i=0; i<10; i++)
 120   1              {
 121   2                      E2Write(&dat, i, 1);
 122   2              }
 123   1      }
 124          
 125          void CloseFucker()
 126          {
 127   1              P2 = (P2&0x1F) | 0xA0;
 128   1              P0 &= 0xAF;     
 129   1              P2 = P2&0x1F;
 130   1      }
 131          
 132          void ConfigTimer0(u16 ms)
 133          {
 134   1              u32 tmp;
 135   1      
 136   1              tmp = 11059200/12;
 137   1              tmp = (tmp*ms) / 1000;
 138   1              tmp = 65536 - tmp;
 139   1              T0RH = (u8)(tmp>>8);
 140   1              T0RL = (u8)tmp;
 141   1              TMOD &= 0xF0;
 142   1              TMOD |= 0x01;
 143   1              TH0 = T0RH;
 144   1              TL0 = T0RL;
 145   1              ET0 = 1;
 146   1              TR0 = 1;
 147   1      }
 148          
 149          void Delay13us()                //@11.0592MHz
 150          {
 151   1              unsigned char i;
 152   1      
 153   1              _nop_();
 154   1              _nop_();
 155   1              i = 33;
 156   1              while (--i);
 157   1      }
 158          
 159          
 160          void InitSonic()
 161          {
 162   1              TMOD &= 0x0F;
 163   1              TMOD |= 0x10;
 164   1              TF1 = 0;
 165   1              TR1 = 0;
 166   1      }
 167          
 168          void SendWave()
 169          {
 170   1              u8 i;
 171   1              
 172   1              while(i--)
 173   1              {
 174   2                      Sonic_Txd = 1;
 175   2                      Delay13us();
 176   2                      Sonic_Txd = 0;
 177   2                      Delay13us();
 178   2              }
C51 COMPILER V9.02   MAIN                                                                  05/21/2018 21:49:56 PAGE 4   

 179   1      }
 180          
 181          void SonicDriver()
 182          {
 183   1              u16 time, Result=0;
 184   1      //      static u16 Result=0;//为什么Result非得是静态或者全局变量，局部变量就不行了？
 185   1              
 186   1              TH1 = 0;
 187   1              TL1 = 0;
 188   1              SendWave();
 189   1              TR1 = 1;
 190   1              while((!TF1) && (Sonic_Rxd));
 191   1              TR1 = 0;
 192   1              
 193   1              LedBuff[7] = LedChar[0];
 194   1              LedBuff[6] = 0xFF;
 195   1              
 196   1              if(TF1 == 1)
 197   1              {
 198   2                      TF1 = 0;
 199   2                      distance = LastDistance;
 200   2              }
 201   1              else
 202   1              {
 203   2                      time = (TH1 << 8) + TL1;
 204   2                      distance = (u16)(time*0.017);
 205   2              }
 206   1              LedBuff[0] = LedChar[distance%10];
 207   1              LedBuff[1] = LedChar[distance/10%10];
 208   1              LedBuff[2] = LedChar[distance/100%10];
 209   1              
 210   1              if(OprtNum == 0)
 211   1              {
 212   2                      Result = LastDistance;
 213   2              }
 214   1              else
 215   1              {
 216   2                      Result = LastDistance + distance;
 217   2              }
 218   1              LedBuff[3] = LedChar[Result%10];
 219   1              LedBuff[4] = LedChar[Result/10%10];
 220   1              LedBuff[5] = LedChar[Result/100%10];
 221   1              
 222   1              LastDistance = distance;
 223   1      }
 224          
 225          void InterruptTimer0() interrupt 1
 226          {
 227   1              static u8 tmr200ms = 0; 
 228   1              
 229   1              TH0 = T0RH;
 230   1              TL0 = T0RL;
 231   1              tmr200ms++;
 232   1              
 233   1              if(OpenLed1)
 234   1              {
 235   2                      tmrLed1++;
 236   2                      if(tmrLed1 >= 200)
 237   2                      {
 238   3                              tmrLed1 = 0;
 239   3                              flagLed1 = 1;
 240   3                      }
C51 COMPILER V9.02   MAIN                                                                  05/21/2018 21:49:56 PAGE 5   

 241   2              }
 242   1      
 243   1              if(tmr200ms >= 200)
 244   1              {
 245   2                      tmr200ms = 0;
 246   2                      flag200ms = 1;
 247   2              }
 248   1              
 249   1              KeyScan();
 250   1              LedScan();      
 251   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    819    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     14      12
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
