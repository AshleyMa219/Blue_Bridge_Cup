C51 COMPILER V9.02   DS1302                                                                03/17/2018 11:16:10 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN ..\output\ds1302.obj
COMPILER INVOKED BY: F:\KEIL4\C51\BIN\C51.EXE ..\source\ds1302.c COMPACT BROWSE DEBUG OBJECTEXTEND PRINT(..\output\ds130
                    -2.lst) OBJECT(..\output\ds1302.obj)

line level    source

   1          ///*
   2          //*******************************************************************************
   3          //* 文件名：ds1302.c
   4          //* 描  述：
   5          //* 作  者：CLAY
   6          //* 版本号：v1.0.0
   7          //* 日  期: 
   8          //* 备  注：
   9          //*         
  10          //*******************************************************************************
  11          //*/
  12          //
  13          //#include "config.h"
  14          //#include <intrins.h>
  15          //
  16          //void DS1302ByteWrite(u8 dat) 
  17          //{
  18          //      u8 mask;
  19          //    
  20          //    for (mask=0x01; mask!=0; mask<<=1)  //低位在前，逐位移出
  21          //    {
  22          //        if ((mask&dat) != 0) //首先输出该位数据
  23          //            DS1302_IO = 1;
  24          //        else
  25          //            DS1302_IO = 0;
  26          //        DS1302_CK = 1;       //然后拉高时钟
  27          //        DS1302_CK = 0;       //再拉低时钟，完成一个位的操作
  28          //    }
  29          //    DS1302_IO = 1;           //最后确保释放IO引脚
  30          //}  
  31          //
  32          //u8 DS1302ByteRead()
  33          //{
  34          //      u8 mask;
  35          //    u8 dat = 0;
  36          //    
  37          //    for (mask=0x01; mask!=0; mask<<=1)  //低位在前，逐位读取
  38          //    {
  39          //        if (DS1302_IO != 0)  //首先读取此时的IO引脚，并设置dat中的对应位
  40          //        {
  41          //            dat |= mask;
  42          //        }
  43          //        DS1302_CK = 1;       //然后拉高时钟
  44          //        DS1302_CK = 0;       //再拉低时钟，完成一个位的操作
  45          //    }
  46          //    return dat;              //最后返回读到的字节数据
  47          //} 
  48          //
  49          //void DS1302SingleWrite(u8 reg,u8 dat )     
  50          //{
  51          //      DS1302_CE=1;     
  52          //      DS1302ByteWrite((reg<<1)|0x80); 
  53          //      DS1302ByteWrite(dat);           
  54          //      DS1302_CE=0; 
C51 COMPILER V9.02   DS1302                                                                03/17/2018 11:16:10 PAGE 2   

  55          //}
  56          //
  57          //u8 DS1302SingleRead (u8 reg)
  58          //{
  59          //      u8 dat=0x00;
  60          //
  61          //      DS1302_CE=1;
  62          //      DS1302ByteWrite((reg<<1)|0x81);
  63          //      dat = DS1302ByteRead();
  64          //      DS1302_CE=0;
  65          //      
  66          ////    DS1302_IO = 0;//？？？这么牛逼？？？
  67          //
  68          //      return dat;                     
  69          //}
  70          //
  71          //void DS1302BurstWrite(u8 *dat)
  72          //{
  73          //      u8 i;
  74          //
  75          //      DS1302_CE=1;     
  76          //      DS1302ByteWrite(0xBE);
  77          //      for(i=0; i<8; i++)
  78          //      {       
  79          //              DS1302ByteWrite(*dat++);                                           
  80          //      }
  81          //      DS1302_CE=0;    
  82          //}
  83          //
  84          //void DS1302BurstRead (u8 *dat)
  85          //{
  86          //      u8 i;
  87          //      DS1302_CE=1;
  88          //      DS1302ByteWrite(0xBF);
  89          //      for(i=0; i<8; i++)
  90          //      {
  91          //              dat[i] = DS1302ByteRead();
  92          //      }
  93          //      DS1302_CE=0;
  94          ////    DS1302_IO=0;//玄学问题？？？            
  95          //}
  96          //
  97          //void InitDS1302()
  98          //{
  99          ////    u8 i;
 100          //    u8 InitTime[] = {  //2018年2月28日 星期二 22:28:00
 101          //        0x00,0x28,0x22, 0x28, 0x02, 0x03, 0x18
 102          //    };
 103          //
 104          //      DS1302_CE = 0;
 105          //      DS1302_CK = 0;
 106          //    DS1302SingleWrite(7, 0x00);  //撤销写保护以允许写入数据
 107          //      DS1302BurstWrite(InitTime);
 108          //}
 109          
 110          /*
 111          *******************************************************************************
 112          * 文件名：ds1302.c
 113          * 描  述：
 114          * 作  者：CLAY
 115          * 版本号：v1.0.0
 116          * 日  期: 
C51 COMPILER V9.02   DS1302                                                                03/17/2018 11:16:10 PAGE 3   

 117          * 备  注：
 118          *         
 119          *******************************************************************************
 120          */
 121          
 122          #include "config.h"
 123          #include "ds1302.h"
 124          
 125          void DS1302ByteWrite(u8 dat) 
 126          {
 127   1              u8 mask;
 128   1          
 129   1              DS1302_CK=0;
 130   1          for (mask=0x01; mask!=0; mask<<=1)  //低位在前，逐位移出
 131   1          {
 132   2              if ((mask&dat) != 0) //首先输出该位数据
 133   2                  DS1302_IO = 1;
 134   2              else
 135   2                  DS1302_IO = 0;
 136   2              DS1302_CK = 1;       //然后拉高时钟
 137   2              DS1302_CK = 0;       //再拉低时钟，完成一个位的操作
 138   2          }
 139   1          DS1302_IO = 1;           //最后确保释放IO引脚
 140   1      }  
 141          
 142          u8 DS1302ByteRead()
 143          {
 144   1              u8 mask;
 145   1          u8 dat = 0;
 146   1          
 147   1              DS1302_CK=0;
 148   1          for (mask=0x01; mask!=0; mask<<=1)  //低位在前，逐位读取
 149   1          {
 150   2              if (DS1302_IO != 0)  //首先读取此时的IO引脚，并设置dat中的对应位
 151   2              {
 152   3                  dat |= mask;
 153   3              }
 154   2              DS1302_CK = 1;       //然后拉高时钟
 155   2              DS1302_CK = 0;       //再拉低时钟，完成一个位的操作
 156   2          }
 157   1          return dat;              //最后返回读到的字节数据
 158   1      } 
 159          
 160          void DS1302SingleWrite(u8 reg,u8 dat )     
 161          {
 162   1              DS1302_CE = 1;   
 163   1              DS1302ByteWrite((reg<<1)|0x80); 
 164   1              DS1302ByteWrite(dat);           
 165   1              DS1302_CE = 0; 
 166   1      }
 167          
 168          u8 DS1302SingleRead (u8 reg)
 169          {
 170   1              u8 dat=0;
 171   1      
 172   1              DS1302_CE = 1;
 173   1              DS1302ByteWrite((reg<<1)|0x81);
 174   1              dat = DS1302ByteRead();
 175   1              DS1302_CE = 0;
 176   1              DS1302_IO = 0;//单字节读完之后必须加这一句！玄学？？？
 177   1      
 178   1              return dat;                     
C51 COMPILER V9.02   DS1302                                                                03/17/2018 11:16:10 PAGE 4   

 179   1      }
 180          
 181          void InitDS1302()
 182          {
 183   1              u8 i;
 184   1          u8 code InitTime[] = {  //2018年3月17日 星期六 11:12:00
 185   1              0x00, 0x12, 0x11, 0x17, 0x03, 0x06, 0x18
 186   1          };
 187   1      
 188   1          DS1302_CE = 0;  //初始化DS1302通信引脚
 189   1          DS1302_CK = 0;
 190   1          DS1302SingleWrite(7, 0x00);  //撤销写保护以允许写入数据
 191   1              for (i=0; i<7; i++)          //设置DS1302为默认的初始时间
 192   1          {
 193   2              DS1302SingleWrite(i, InitTime[i]);
 194   2          }
 195   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    124    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
